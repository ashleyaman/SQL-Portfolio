CREATE TABLE marathon (
    ID INTEGER PRIMARY KEY,
    participant_name TEXT,
    completion_fraction REAL,
    has_run_marathon INTEGER
);

INSERT INTO marathon (participant_name, completion_fraction, has_run_marathon)
VALUES
    ('Charlotte Chaze', 0.8534, 1),
    ('Maria Rodriguez', 1.0000, 0),
    ('Hassan Ali', 0.7065, 0),
    ('Leila Kim', 0.9545, 1),
    ('Javier Martinez', 0.8055, 0),
    ('Fatima Ahmed', 0.6044, 1),
    ('Priya Patel', 0.7564, 0),
    ('Mohammed Rahman', 0.4032, 0),
    ('Sara Nguyen', 0.9032, 1),
    ('Rahul Sharma', 0.5513, 0);

/*Select every participant name and the percent of the marathon 
that they completed.*/

/*MAKE SURE TO PUT COMMA AFTER VALUES IN THE SELECT STATEMENT*/

SELECT participant_name
FROM marathon
WHERE has_run_marathon = 1

SELECT participant_name , completion_fraction*100 as completion_percent
FROM marathon

SELECT participant_name, completion_fraction*100 as completion_percent
FROM marathon
WHERE has_run_marathon = 1
ORDER BY completion_fraction asc

/*ROUND FUNCTION*/
SELECT participant_name, completion_fraction*100 
as completion_percent
FROM marathon
WHERE participant_name="Charlotte Chaze";

-- Using ROUND
SELECT participant_name, ROUND(completion_fraction*100) 
as completion_percent
FROM marathon
WHERE participant_name="Charlotte Chaze";

-- Using ROUND and specifying how many decimals you want in your result
SELECT participant_name, ROUND(completion_fraction*100,1) 
as completion_percent
FROM marathon
WHERE participant_name="Charlotte Chaze";

/*Select every participant name and the percent of the marathon 
that they completed. Show the percent of the marathon completed 
rounded to one decimal place.*/
SELECT participant_name, ROUND(completion_fraction*100, 1)
as completion_percent
FROM marathon

SELECT participant_name, ROUND(completion_fraction*100, 1)
as completion_percent
FROM marathon
WHERE has_run_marathon=0

SELECT participant_name, ROUND(completion_fraction*100, 1)
as completion_percent
FROM marathon
WHERE has_run_marathon=0
ORDER BY completion_fraction desc

SELECT participant_name, ROUND(completion_fraction*100, 1)
as completion_percent
FROM marathon
WHERE participant_name LIKE 'C%'

/*For this query, show how many employees completed each quarter 
of the marathon (75% or more, 50%, 25%, or under 25%).*/

SELECT participant_name, ROUND(completion_fraction*100)
AS completion_percent
CASE WHEN completion_percent >= 75 THEN 'GREATER THAN 75%'
     WHEN completion_percent >= 50 THEN 'GREATER THAN 50%'
     WHEN completion_percent >= 25 THEN 'GREATER THAN 25%'
     ELSE 'UNDER 25%'
     END AS 'Completion_Percentage'
FROM marathon

SELECT participant_name
CASE 
     WHEN completion_fraction >= .75 THEN "75 AND UP"
     WHEN completion_fraction >= .50 THEN "50 AND UP"
     WHEN completion_fraction >= .25 THEN "25 AND UP"
     ELSE "UNDER 25"
     END AS "completed"
FROM marathon
 
SELECT COUNT(*) 
CASE 
    WHEN completion_fraction >=.75 THEN "75%+"
    WHEN completion_fraction >=.5 THEN "50%+"
    WHEN completion_fraction >=.25 THEN "25%+"
    ELSE "Under 25%" 
    END AS "quarter_completed"
FROM marathon
  
SELECT COUNT(*) 
CASE 
    WHEN completion_fraction >=.75 THEN "75%+"
    WHEN completion_fraction >=.5 THEN "50%+"
    WHEN completion_fraction >=.25 THEN "25%+"
    ELSE "Under 25%" 
    END AS "quarter_completed"
FROM marathon
GROUP BY quarter_completed     

SELECT COUNT(*),
CASE WHEN completion_fraction >=.75 THEN "75%+"
WHEN completion_fraction >=.5 THEN "50%+"
WHEN completion_fraction >=.25 THEN "25%+"
ELSE "Under 25%" END AS "quarter_completed"
FROM marathon
GROUP BY quarter_completed

SELECT participant_name, has_run_marathon,
CASE WHEN has_run_marathon = 1 THEN "Yes"
ELSE "No" END AS "Completed"
FROM marathon
ORDER BY has_run_marathon desc

SELECT COUNT (*) as how_many_completed,
CASE WHEN has_run_marathon = 1 THEN "Yes"
ELSE "No" END AS "Completed"
FROM marathon
GROUP BY "completed"
ORDER BY how_many_completed desc









     
